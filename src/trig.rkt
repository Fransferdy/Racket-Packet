#lang racket
(require "arithmetic.rkt")
(require math)

(define (toVersor q)
  (define (a)
    (* 2 (acos(real q))))
  (define (x)
    (/ (gi q) (sin(/ (a) 2))))
  (define (y)
    (/ (gj q) (sin(/ (a) 2))))
  (define (z)
    (/ (gk q) (sin(/ (a) 2))))
  (list (a) (x) (y) (z))
)

(define (toQ v)
  (define (r)
    (* 2 (cos(/ (real v) 2))))
  (define (i)
    (* (gi v) (sin(/ (real v) 2))))
  (define (j)
    (* (gj v) (sin(/ (real v) 2)))) 
  (define (i)
    (* (gk v) (sin(/ (real v) 2))))
  (list (r) (i) (j) (k))
)

(define (qexp q)
  (define (v)
    (toVersor q)
    (list (cos(real v)) (* (gi v) (sin(real v))) (* (gj v) (sin(real v))) (* (gk v) (sin(real v)))))
  (toQ (v))
)  

(define (qlog q)
  (qexp q)
)
    
